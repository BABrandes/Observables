name: Version Management

on:
  workflow_dispatch:
    inputs:
      increment_type:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'observables/_version.py'
      - 'observables/__init__.py'
      - 'setup.py'
      - '.github/workflows/version-bump.yml'
      - 'scripts/version_manager.py'
      - 'update_version.py'

jobs:
  version-bump:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && !contains(github.event.head_commit.message, 'chore: bump version'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for version calculation
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global init.defaultBranch main
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
        pip install -e .
    
    - name: Debug environment
      run: |
        echo "Python version: $(python --version)"
        echo "Current directory: $(pwd)"
        echo "Files in observables/:"
        ls -la observables/
        echo "Current version:"
        python scripts/version_manager.py get-current
    
    - name: Determine version increment
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "increment_type=${{ github.event.inputs.increment_type }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event.head_commit.message }}" =~ ^(BREAKING CHANGE|major|MAJOR) ]]; then
          echo "increment_type=major" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event.head_commit.message }}" =~ ^(feat|feature|minor|MINOR) ]]; then
          echo "increment_type=minor" >> $GITHUB_OUTPUT
        else
          echo "increment_type=patch" >> $GITHUB_OUTPUT
        fi
        
        echo "Current version: $(python scripts/version_manager.py get-current)"
        echo "Increment type: ${{ steps.version.outputs.increment_type }}"
    
    - name: Bump version
      run: |
        python scripts/version_manager.py auto ${{ steps.version.outputs.increment_type }} "chore: bump version"
    
    - name: Get new version
      id: new_version
      run: |
        echo "new_version=$(python scripts/version_manager.py get-current)" >> $GITHUB_OUTPUT
    
    - name: Show changes
      run: |
        echo "Files changed:"
        git status --porcelain
        echo "Version files content:"
        cat observables/_version.py
        cat observables/__init__.py | grep __version__
    
    - name: Create Pull Request
      if: github.event_name == 'push'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: bump version to ${{ steps.new_version.outputs.new_version }}"
        title: "chore: bump version to ${{ steps.new_version.outputs.new_version }}"
        body: |
          This PR was automatically created to bump the version.
          
          **Version increment type:** ${{ steps.version.outputs.increment_type }}
          **New version:** ${{ steps.new_version.outputs.new_version }}
          
          Changes:
          - Updated version in `observables/_version.py`
          - Updated version in `observables/__init__.py`
          - Updated version in `setup.py`
        
        branch: version-bump-${{ steps.new_version.outputs.new_version }}
        delete-branch: true
        base: main
